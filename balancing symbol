//
//  main.c
//  balancing symbol
//
//  Created by 毛遵杰 on 2019/11/12.
//  Copyright © 2019 毛遵杰. All rights reserved.
//

#include <stdio.h>
#include <stdlib.h>

typedef struct node
{
    char symbol;
    struct node* next;
}Node;

typedef struct node* stack;
typedef struct node* position;
stack makeStack(void);
int isEmpty(stack p);
void push(stack p,char X);
void pop(stack p);
char top(stack p);
int match(char p,char q);
void checkSymbols(stack p);
stack makeStack(void)
{
    stack p=(struct node*)malloc(sizeof(struct node));
    if(p==NULL)
    printf("memory error");
    else
    {
        p->next=NULL;
        return p;
    }
}
int isEmpty(stack p)
{
    return p->next==NULL;
}
void push(stack p,char X)
{
    if(p==NULL)
    printf("Please make a stack first");
    position q = (struct node*)malloc(sizeof(struct node));
    if(q==NULL)
    printf("memory error");
    else
    {
        q->symbol=X;
        q->next=p->next;
        p->next=q;
    }
}
void pop(stack p)
{
    position q;
    if(isEmpty(p))
    printf("Empty space");
    else
    {
        q=p->next;
        p->next=p->next->next;
        free(q);
    }

}
char top(stack S)
{
    return S->next->symbol;
}
int match(char m,char n)
{
    if(abs(m-n)==1)
    return 1;
    else if(abs(m-n)==2)
    return 1;
    else
    return 0;

}
void checkSymbols(stack p)
{
    char sy;
    while((sy=getchar())!='#')
    {
        if(sy=='{'||sy=='['||sy=='(')
        push(p,sy);
        else
            if(sy=='}'||sy==']'||sy==')')
        {
            if(match(sy,top(p)))
            pop(p);
            else
            printf("error");
        }
    }
        if(isEmpty(p))
        printf("right\n");
}
int main(int argc, char *argv[])
{
    stack p = makeStack();
    checkSymbols(p);
    return 0;
}
